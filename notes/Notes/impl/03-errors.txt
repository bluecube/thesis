Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-02-18T12:25:19.769501

====== 03-errors ======
Created Friday 18 February 2011

Determining the user-equivalent range error from SIRF.

Clock drift (in message 7) is reported in Hz, must be divided by ... (receiver cpu frequency? receiver clock frequency?)
(is clock drift a frequency difference?)
We don't need this clock drift. We will be getting our own from the MCL later.

The info from sirf manual:
Carrier Frequency (m/s) = Reported Carrier Frequency (m/s) – Clock Drift (Hz)*C / 1575420000 Hz 
GPS Software Time – Clock Bias = Time of Receipt (GPS Time)
GPS Software Time – Pseudorange (sec) = Time of Transmission (GPS Time)
Adjust satellite position: (GPS Time (msg 30 -- GPS Time)) – Time of Transmission) * Vsat
Adjust pseudorange for iono delay ... substract ionospheric delay (msg 30) from pseudorange

-> [[Projects:Diplomka:Notes:impl]]


We probably don't have to work with SV clock offsets, the SIRF chip removes it from _all_ the data (including pseudoranges)

SV state messages (ID 30) are sent after measuremtent data (ID 28) how to put these together?

We can assume that receiver was stationary, but we probably can't assume that the clock offset was fixed. Is at least clock drift constant?

Every complete set of measurements has identical gps_sw time fields. This might be useful. On the other hand time_tag field is always zero.

Receiver clock offset changes allmost linearly (~~100ms every 25 minutes ... That is too much, isn't it?) and wraps around after it gets to about 150 ms
[ ] Check what are reasonable values for clock drift in GPS receiver
[ ] Relativistic effects!
[ ] Tropospheric errors

===== UERE computation: =====
Only from recording, because this has to be done in multiple passes.

==== Calculate the receiver ECEF coordinates from MID28 ====
This should converge to the true position.

==== Analyze clock offsets ====
We can't fix the clock offset, so we're using least squares, assuming that the clock offset change is linear.
Because the gps_sw_time field is not monotonic, we have to detect clock corrections and only calculate the clock drifts between them.

Pseudorange:
{{./equation.png?type=equation}}

Because of the SIRF magic:
{{./equation001.png?type=equation}}

How receiver time relates to the system time:
{{./equation002.png?type=equation}}

{{./equation003.png?type=equation}}

All together:
{{./equation004.png?type=equation}}
{{./equation005.png?type=equation}}
{{./equation006.png?type=equation}}

{{./equation007.png?type=equation}}
{{./equation008.png?type=equation}}

Calculated offset should be counted in system time:
{{./equation010.png?type=equation}} ; {{./equation011.png?type=equation}}

=== Clock offset [s] vs gps system time [s] of the 30 minutes recording ===
{{./clock_offsets.png}}

The points with offset < 0 are messages with pseudorange == 0.0


Least squares:
minimize {{./equation009.png?type=equation}}

=>

{{./equation012.png?type=equation}}
{{./equation013.png?type=equation}}


{{./equation014.png?type=equation}}

{{./equation015.png?type=equation}}

